{"version":3,"sources":["components/Navbar/index.js","components/Header/index.js","components/Wrapper/index.js","pages/Home/index.js","pages/Menu/index.js","pages/About/index.js","pages/Enemies/index.js","pages/Catering/index.js","pages/Contact/index.js","components/SVG/Gary.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","href","Header","className","src","alt","Wrapper","props","Home","id","Menu","class","menu","map","o","Fragment","key","name","About","Enemies","useState","enemies","setEnemiesList","onClick","filtered","sort","a","b","sortName","occupation","sortOccupation","status","sortStatus","image","Catering","Contact","Gary","baseURL","cacheRequests","description","loader","onError","error","console","log","message","onLoad","hasCache","preProcessor","code","replace","title","uniqueHash","uniquifyIDs","Footer","Date","getYear","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7de308fa.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav>\r\n            <a href=\"/Menu\">Our Menu</a>\r\n            <a href=\"/About\">About Us</a>\r\n            <a href=\"/Enemies\">Evil Plans</a>\r\n            <a href=\"/Catering\">Catering</a>\r\n            <a href=\"/Contact\">Get in touch</a>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport \"./style.css\";\r\n// import PlanktonKaren from \"../SVG/PlanktonKaren\";\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header className=\"App-header clearfix\">\r\n            {/* <PlanktonKaren /> */}\r\n            <a href=\"/\"><img src=\"images/logo_1.png\" alt=\"Chum Bucket logo\" /></a>\r\n            <Navbar />\r\n        </header>\r\n    )\r\n};","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <main className=\"wrapper\" {...props} />;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function Home() {\r\n    return(\r\n        <div className=\"page\">\r\n            <div className=\"coming-soon\">\r\n                <h1>This is my Home page</h1>\r\n                <p>This page is under construction. Please come back later to see the finished product.</p>\r\n                <h2>In the mean time please click on the \"Evil Plans\" link to see my homework.</h2>\r\n            </div>\r\n            <section id=\"intro\">\r\n                <img src=\"images/chum-23hours.jpg\" alt=\"Now open 23 hours\" />\r\n            </section>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\nimport menu from \"../../menu.json\";\r\n\r\nexport default function Menu() {\r\n    return(\r\n        <div class=\"page\">\r\n        <div className=\"coming-soon\">\r\n            <h1>This is my Menu page</h1>\r\n            <p>This page is under construction. Please come back later to see the finished product.</p>\r\n            <h2>In the mean time please click on the \"Evil Plans\" link to see my homework.</h2>\r\n        </div>\r\n        <section>\r\n            <h2>Chum Bucket</h2>\r\n            <ul>\r\n                {menu.map(o=>(\r\n                    <React.Fragment key={o.id}>\r\n                        <li>{o.name}</li>\r\n                    </React.Fragment>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className=\"coming-soon\">\r\n            <h1>This is my About page</h1>\r\n            <p>This page is under construction. Please come back later to see the finished product.</p>\r\n            <h2>In the mean time please click on the \"Evil Plans\" link to see my homework.</h2>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport \"./style.css\";\r\nimport enemies from \"../../employees.json\";\r\n\r\nexport default function Enemies() {\r\n    const [enemiesList, setEnemiesList] = useState({\r\n        enemies\r\n    });\r\n    const sortStatus = () => {\r\n        let filtered = enemies.sort( (a,b)=> {\r\n            if (a.status > b.status ){\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n        setEnemiesList({filtered});\r\n    };\r\n    const sortName = () => {\r\n        let filtered = enemies.sort( (a,b)=> {\r\n            if (a.name > b.name ){\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n        setEnemiesList({filtered});\r\n    };\r\n    const sortOccupation = () => {\r\n        let filtered = enemies.sort( (a,b)=> {\r\n            if (a.occupation > b.occupation ){\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n        setEnemiesList({filtered});\r\n    };\r\n    return (\r\n        <div className=\"enemyList\">\r\n            <h1>This is my Enemies page</h1>\r\n            <div className=\"table\">\r\n                <button className=\"tableBtn\" onClick={()=> sortName()}>Name</button>\r\n                <button className=\"tableBtn\" onClick={()=>sortOccupation()}>Occupation</button>\r\n                <button className=\"tableBtn\" onClick={()=>sortStatus()}>Status</button>\r\n                {enemies.map( o => (\r\n                    <React.Fragment key={o.id}>\r\n                        <div className=\"enemy\">\r\n                            <img \r\n                                src={o.image}\r\n                                alt={o.name}\r\n                                />\r\n                            <div>\r\n                                <h2>{o.name}</h2>\r\n                                <p>{o.occupation}</p>\r\n                            </div>\r\n                            <h3 className={o.status}>{o.status}</h3>\r\n                        </div>\r\n                    </React.Fragment>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nexport default function Catering() {\r\n    return (\r\n        <div className=\"coming-soon\">\r\n            <h1>This is my Catering page</h1>\r\n            <p>This page is under construction. Please come back later to see the finished product.</p>\r\n            <h2>In the mean time please click on the \"Evil Plans\" link to see my homework.</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function Contact(){\r\n    return(\r\n        <div className=\"coming-soon\">\r\n            <h1>This is my Contact page</h1>\r\n            <p>This page is under construction. Please come back later to see the finished product.</p>\r\n            <h2>In the mean time please click on the \"Evil Plans\" link to see my homework.</h2>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport SVG from 'react-inlinesvg';\r\n\r\nexport default function Gary(){\r\n    return (\r\n        <SVG\r\n            baseURL=\"/home\"\r\n            cacheRequests={true}\r\n            description=\"Gary\"\r\n            loader={() => <span>Loading...</span>}\r\n            onError={error => console.log(error.message)}\r\n            onLoad={(src, hasCache) => console.log(src, hasCache)}\r\n            preProcessor={code => code.replace(/fill=\".*?\"/g, 'fill=\"currentColor\"')}\r\n            src=\"/images/gary.svg\"\r\n            title=\"Gary\"\r\n            uniqueHash=\"a1f8d1\"\r\n            uniquifyIDs={true}\r\n        />\r\n    )\r\n};","import React from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport Gary from \"../SVG/Gary\";\r\nimport \"./style.css\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <Navbar />\r\n            <p className=\"copyright\">\r\n                &copy;1999 - {new Date().getYear() + 1900}\r\n            </p>\r\n            <Gary />\r\n        </footer>\r\n    )\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper';\nimport Home from './pages/Home';\nimport Menu from './pages/Menu';\nimport About from './pages/About';\nimport Enemies from './pages/Enemies';\nimport Catering from './pages/Catering';\nimport Contact from './pages/Contact';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Wrapper>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/About\" component={About} />\n        <Route exact path=\"/Menu\" component={Menu} />\n        <Route exact path=\"/Enemies\" component={Enemies} />\n        <Route exact path=\"/Catering\" component={Catering} />\n        <Route exact path=\"/Contact\" component={Contact} />\n      </Wrapper>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}